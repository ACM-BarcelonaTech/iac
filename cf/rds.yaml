AWSTemplateFormatVersion: "2010-09-09"
Description: Set up RDS Aurora cluster [managed by github.com/hms-dbmi-cellenics/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the cluster need to be created.

  DBPort:
    Default: '5432'
    Type: String

  DBName:
    Description: The database name for Aurora PostgreSQL DB instance
    Type: String

  DBMasterUsername:
    Description: The database master/super username.
    Type: String
    NoEcho: "true"

  DBMasterUserPassword:
    Description: The password for database master/super user.
    Type: String
    NoEcho: "true"

  DBInstanceClass:
    Description: Database instance class
    Type: String

  DBAllocatedStorage:
    Description: The memory to be allocated for your database
    Type: Number

  EnablePerformanceInsights:
    Description: A value that indicates whether to enable Performance Insights for the DB instance.
    Type: String
    Default: false

  MultiAZ:
    Description: true, in case you wish to have a multi-AZ deployment
    Type: String
    Default: true

Mappings: 
  DBFamilyMap: 
    "11.13":
      "family": "aurora-postgresql11"
    "12.8":
      "family": "aurora-postgresql12"
    "13.4":
      "family": "aurora-postgresql13"

Outputs:
  RDSEndpoint:
    Description: RDS Database Endpoint
    Value:
      Fn::GetAtt:
        - DBInstance
        - Endpoint.Address
    Export:
      Name:
        Fn::Sub: "RDSEndpoint"

Resources:
  DBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: 13.4
      DBClusterIdentifier: auroradbcluster
      DBClusterParameterGroupName: !Ref DBClusterPG
      DBSubnetGroupName: !Ref DBSubnetGroup
      DatabaseName: !Ref DBName
      DeletionProtection: false
      MasterUserPassword: !Ref DBMasterUserPassword
      MasterUsername: !Ref DBMasterUsername
      Port: 5432
      BackupRetentionPeriod: 5
      SourceRegion: !Ref 'AWS::Region'
      StorageEncrypted: true
      VpcSecurityGroupIds: 
        - !Ref RDSSecurityGroup
    
  DBClusterPG:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: DB Cluster Parameter Group for your Aurora DB cluster
      Family: aurora-postgresql10
      Parameters:
        rds.logical_replication: 1
        
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Tags:
        - Key: "Name"
          Value: RdsParameterGroup
      Description: Database Parameter Group for your Aurora DB Instnace
      Family: postgres10
      Parameters:
        shared_preload_libraries: "pg_stat_statements, pg_hint_plan"

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Biomage subnet group for ${Environment}.
      DBSubnetGroupName: !Sub AuroraSubnetGroup${Environment}
      Tags:
        - Key: "Name"
          Value: AuroraSubnetGroupName
      SubnetIds:
        Fn::Split:
          - ','
          - Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::SubnetsPrivate"

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Tags:
        - Key: "Name"
          Value: mypostgresdb
      DBInstanceIdentifier: mypostgresdb
      DBName:
        !Ref: DBName
      AllocatedStorage:
        !Ref: DBAllocatedStorage
      DBInstanceClass:
        !Ref: DBInstanceClass
      Engine: aurora-postgresql
      EngineVersion: 10.11
      MasterUsername:
        !Ref: DBMasterUsername
      MasterUserPassword:
        !Ref: DBMasterUserPassword
      DBSubnetGroupName:
        !Ref: DBSubnetGroup
      DBParameterGroupName:
        !Ref: DBParameterGroup
      VPCSecurityGroups: 
        - !Ref RDSSecurityGroup
      StorageType: gp2
      StorageEncrypted: "false"
      EnablePerformanceInsights:
        !Ref: EnablePerformanceInsights
      MultiAZ: !Ref MultiAZ
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      BackupRetentionPeriod: 7
      PubliclyAccessible: false
  
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Biomage RDS security group for ${Environment}"
      SecurityGroupEgress: []
      SecurityGroupIngress:
        - SourceSecurityGroupId: 
            Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::SharedNodeSecurityGroup"
          FromPort: !Ref DBPort
          IpProtocol: tcp
          ToPort: !Ref DBPort
        # - SourceSecurityGroupId: 
        #     Fn::ImportValue: !Sub "eksctl-biomage-${Environment}-cluster::ClusterSecurityGroupId"
        #   FromPort: !Ref DBPort
        #   IpProtocol: tcp
        #   ToPort: !Ref DBPort
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-security-group"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId:
        Fn::ImportValue:
          !Sub "eksctl-biomage-${Environment}-cluster::VPC"
  